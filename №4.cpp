#include <iostream>   
#include <cmath>      
#include <iomanip>    
using namespace std;  

int main() 
{
    setlocale(LC_ALL, "ru"); 

    // Задаем начальное и конечное значения, а также шаг изменения x
    double a = -1.9;  // Начальное значение x
    double b = 2.7;   // Конечное значение x
    double h = 0.3;   // Шаг изменения x

    // Переменные для отслеживания максимального и минимального значений функции
    double maxY = -1e9, minY = 1e9; // Инициализируем экстремумы очень малыми/большими значениями
    double xMax = a, xMin = a;        // x, при которых достигаются экстремумы

    int index = 0;       // Счетчик для порядкового номера строк таблицы
    double prevY = 0;    // Переменная для хранения значения функции на предыдущей итерации
    bool firstIteration = true; // Флаг, показывающий, что это первая итерация (нет предыдущего значения)

    cout << fixed << setprecision(4); // Форматируем вывод: фиксированное число знаков после запятой

    // Выводим заголовок таблицы
    cout << "-----------------------------------------------------------------" << endl;
    cout << "| №  |    x    |   Y(x)     | Тренд (возр./убыв.) |" << endl;
    cout << "-----------------------------------------------------------------" << endl;

    // Итерация по значениям x от a до b с шагом h
    for (double x = a; x <= b + 1e-9; x += h) {
        // Вычисляем значение функции Y(x) по формуле:
        // Y(x) = (x²/4 + x/2 – 3) * e^(x²/2)
        double Y = ((x * x) / 4.0 + x / 2.0 - 3) * exp((x * x) / 2.0);

        // Обновляем максимальное и минимальное значения функции, если необходимо
        if (Y > maxY) { maxY = Y; xMax = x; }
        if (Y < minY) { minY = Y; xMin = x; }

        // Определяем тренд изменения (возрастание или убывание) по сравнению с предыдущим значением
        string trend;
        if (firstIteration) 
        {
            trend = "----"; // Для первой строки тренд не определен
            firstIteration = false;
        }
        else 
        {
            if (Y > prevY)
                trend = "возр.";     // Если текущее значение больше предыдущего — функция возрастает
            else if (Y < prevY)
                trend = "убыв.";     // Если меньше — функция убывает
            else
                trend = "нет изм.";   // Если равны — изменений нет
        }

        // Выводим текущую строку таблицы:
        // номер строки, значение x, значение Y(x) и сообщение о тренде
        cout << "| " << setw(2) << index
            << " | " << setw(7) << x
            << " | " << setw(10) << Y
            << " | " << setw(17) << trend << " |" << endl;

        prevY = Y;   // Сохраняем текущее значение функции для сравнения на следующем шаге
        index++;     // Увеличиваем порядковый номер строки
    }

    cout << "-----------------------------------------------------------------" << endl;
    cout << "Максимальное значение Y(x) = " << maxY << " при x = " << xMax << endl;
    cout << "Минимальное значение Y(x) = " << minY << " при x = " << xMin << endl;

    return 0; 
}
